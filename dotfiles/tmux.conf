# Use C-a as the new prefix. Unbind C-b.
unbind-key C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Start windows and panes at 1, not 0.
set -g base-index 1
setw -g pane-base-index 1
# Renumber windows when a window is closed.
set -g renumber-windows on

# Display messages for a long time.
set -g display-time 4000
# Redraw the status line every 10 seconds.
set -g status-interval 10

# Big buffer
set -g history-limit 50000

# Enable focus events.
# Required for FocusGained, FocusLost events in nvim.
set -g focus-events on

# Set default terminfo to use.
set -s default-terminal tmux-256color

# Status line
set -g status-bg black
set -g status-fg white
set -g status-left "#[fg=green][ "
set -g status-right "#[fg=green]][ #[default]%Y-%m-%d %H:%M#[fg=green] ]"

# Show current window in bold.
setw -g window-status-current-style bold

# Reload tmux configuration.
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# Navigate through tmux windows easily.
bind-key -n C-M-j previous-window
bind-key -n C-M-k next-window

#########################################
#                                       #
#    Integrate with nvim's Navigator    #
#                                       #
#########################################

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Navigate through Vim windows and tmux panes easily.
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

#######################################
#                                     #
#    End of nvim's Navigator config   #
#                                     #
#######################################

# Manage splits like in Vim. Create new splits in the same path as the current
# split.
unbind-key x
bind-key v split-window -h -c "#{pane_current_path}"
bind-key x split-window -v -c "#{pane_current_path}"

# Create new windows in the same path as the current window.
bind c new-window -c "#{pane_current_path}"

# Enter copy mode with Enter.
bind Enter copy-mode

bind r command-prompt -p "Please enter new window name:" "rename-window '%1'"

#################
#               #
#    Plugins    #
#               #
#################

#######
# tpm #
#######

# List of plugins
set -g @plugin "tmux-plugins/tpm"
set -g @plugin "rickstaa/tmux-notify"

###############
# tmux-notify #
###############

set -g @tnotify-verbose "on"
set -g @tnotify-verbose-msg "Task in window #I (#W) finished!"
set -g @tnotify-prompt-suffixes "‚ùØ"
set -g @tnotify-telegram-bot-id "6789101455:AAFskvzeHi_YnEpwJpXDIMBLLjLaEvSDeQY"
set -g @tnotify-telegram-channel-id "6752405302"
set -g @tnotify-telegram-all "on"

##################
# Initialize tpm #
##################

# Initialize plugin manager (keep this line at the very bottom of tmux.conf).
run "~/.tmux/plugins/tpm/tpm"
