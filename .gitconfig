[user]
    name = Jo√£o Sampaio
    email = jpmelos@gmail.com

[core]
    editor = nvim
    pager = delta
    excludesFile = ~/.gitignore-global

[interactive]
    diffFilter = delta --color-only

[delta]
    navigate = true
    side-by-side = true
    line-numbers = true

[init]
    defaultBranch = main

[branch]
    sort = -committerdate

[fetch]
    prune = true

[log]
    date = local

[status]
    showUntrackedFiles = all

[diff]
    colorMoved = no

[merge]
    conflictStyle = diff3

[rebase]
    updateRefs = true

[rerere]
	enabled = true

[commit]
    verbose = true
    gpgSign = true

[tag]
    gpgSign = true

[push]
    default = simple
    autoSetupRemote = true

[pull]
    rebase = true

[color "branch"]
    current = green dim bold
    remote = red dim

[color "status"]
    added = green dim
    changed = blue dim
    untracked = red dim

[color "diff"]
    meta = black bold
    frag = black
    new = green dim bold
    old = red dim bold
    whitespace = black red dim bold

[alias]
    main-branch = ! git symbolic-ref refs/remotes/origin/HEAD | cut -d'/' -f4
    root = rev-parse --show-toplevel
    nuke = "! f() { source "$HOME/.gitfunctions"; __git_nuke; }; f"
    big-revert = "! f() { source "$HOME/.gitfunctions"; __git_big_revert; }; f"

    # st = status
    st = status

    # sh = show
    sh = show
    shf = show --name-status
    shh = "! f() { HEADN=$1; shift; git show "HEAD~$HEADN" $@; }; f"

    # l = log (except ls for list)
    l = "! f() { git log --color=always --oneline --graph --decorate $@ | awk -f ~/.git-log-prepend-number-awk | less -R; }; f"

    # ls = list
    ls = ls-tree HEAD --

    # b = branch
    b = branch
    br = "! f() { git branch -vv --color=always | head -n 20; }; f"
    bn = checkout -b  # n = new
    bd = branch -D  # d = delete

    # d = diff
    d = diff
    dst = diff --name-status
    dca = diff --cached
    dm = ! git diff $(git main-branch)...HEAD  # m = master or main

    # o = checkout
    o = checkout
    om = ! git checkout $(git main-branch)  # m = master or main
    of = checkout -f

    # a = add
    a = add
    aa = add -A :/
    apa = add --patch

    # c = commit (except cp for cherry-pick)
    c = commit
    ca = commit -a
    cm = commit --amend
    cn = commit -n
    cam = commit -a --amend
    can = commit -a -n
    cmn = commit --amend -n
    camn = commit -a --amend -n
    cw = commit -a -n -m "WIP"
    # Undo cw.
    ucw = reset HEAD~1

    # cp = cherry-pick, intruding into c (commit) namespace
    cp = cherry-pick

    # r = rebase
    r = rebase
    ri = rebase -i
    rim = ! git rebase -i $(git main-branch)  # m = master or main
    rc = rebase --continue
    ra = rebase --abort

    # p = push (except pu for pull)
    p = push
    pf = push --force-with-lease

    # pu = pull
    pu = pull

[include]
    path = ~/devel/dotfiles/references/gitconfigs/gpg-keys

[includeIf "gitdir:~/devel/close/"]
    path = ~/devel/dotfiles/references/gitconfigs/close
