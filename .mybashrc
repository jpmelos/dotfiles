# vim:ft=sh
#
# We are going to use $HOME =~ ^/Users.* as a nice heuristic to detect MacOS.

# For better colors in Vim.
export TERM=xterm-256color

# Changes command prompt
PS1='\[\e[1;32m\][\u@\h \W]\$\[\e[0m\] '

# Sets default editor for various commands
export EDITOR=$(which vim)

# Make grep and other commands show more colors
export GREP_COLORS="fn=37"

# Prepends time to each command in history
export HISTTIMEFORMAT="%d/%m/%y %T "
# Avoids duplicate commands in history
export HISTCONTROL=ignoredups:erasedups
# Append to history file, instead of rewriting it
shopt -s histappend
# Updates history after every command
export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a;
                       history -c; history -r"

alias cal='cal -3'
alias cp='cp -i'
alias dc='docker-compose'
alias grep='grep --color=always --exclude-dir=.git --binary-files=without-match -n'
alias less='less -r'
alias list='ls -FhAls --color=never | less -r'
alias ls='ls -F --color=never'
alias mv='mv -i'
alias pytags="ctags --languages=python -R $1"
alias screen='screen -rd || screen'
alias tail='tail -f'
alias tmux='tmux attach || tmux'
alias vim='vim -O'

# We are going to use $HOME =~ ^/Users.* as a nice heuristic to detect MacOS.
if [[ $HOME =~ ^/Users.* ]]; then
    alias list='ls -FhAls | less -r'
    alias ls='ls -F'
fi

# Shows git diff, excluding deleted files.
dico() {
    git diff $(git status -s --porcelain | \grep -v "^ D" | cut -b4-)
}

# Serves current working dir in 0.0.0.0:80
localserver() {
    RANDOM_PORT=$(( $RANDOM % 16385 + 49152 ))

    if [[ ! -d /tmp/nginx ]]; then
        mkdir /tmp/nginx
    fi
    cp ~/.localserver.conf /tmp/nginx/localserver.conf

    echo "Connect to http://localhost:$RANDOM_PORT"
    docker run \
        --rm \
        -ti \
        --name localserver \
        -v "$PWD:/usr/share/nginx/html:ro" \
        -v "/tmp/nginx:/copy_on_start:ro" \
        -p $RANDOM_PORT:80 \
        --entrypoint bash \
        nginx -c "cp /copy_on_start/localserver.conf /etc/nginx/nginx.conf; nginx"

    unset RANDOM_PORT
}


# Runs a command and show all files modified by it in the current directory,
# comparing date of last modification. So, there might be false positives,
# but still a pretty good idea.
supervise() {
    NOW="$(date "+%F %T.%N")"
    sleep 1
    $@
    find . -newermt "$NOW"
}

# Remove colors from input
nocolors() {
    FILTER="s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"
    while read -r line; do
        echo "$line" | sed -r "$FILTER"
    done
}

# Show all manually installed packages.
showpackages() {
    comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n 's/^Package: //p' | sort -u)
}

# Deletes all unused Docker entities created by users.
cleandocker() {
    docker system prune
}

# Delete all dangling Docker images.
cleanimages() {
    docker image prune
}

update() {
    sudo apt-get update
    sudo apt-get -y dist-upgrade
    sudo apt-get -y autoremove
}

# Create ~/bin
if [[ ! -d ~/bin ]]; then
    mkdir ~/bin
fi
