# vim:ft=sh

# For better colors in Vim.
export TERM=xterm-256color

# Changes command prompt
PS1='\[\e[1;32m\][\u@\h \W]\$\[\e[0m\] '

# Sets default editor for various commands
export EDITOR=$(which vim)

# Make grep and other commands show more colors
export GREP_COLORS="fn=37"

# Prepends time to each command in history
export HISTTIMEFORMAT="%d/%m/%y %T "
# Avoids duplicate commands in history
export HISTCONTROL=ignoredups:erasedups
# Append to history file, instead of rewriting it
shopt -s histappend
# Updates history after every command
export PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a;
                       history -c; history -r"

alias activate='source ~/myvenv/bin/activate'
alias cal='cal -3'
alias cp='cp -i'
alias dc='docker-compose'
alias grep='grep --color=always --binary-files=without-match -n'
alias less='less -r'
alias list='ls -FhAls --color=never | less -r'
alias ls='ls -F --color=never'
alias mv='mv -i'
alias pytags="ctags --languages=python -R $1"
alias screen='screen -rd || screen'
alias tail="tail -f"
alias tmux='tmux attach || tmux'
alias vim="vim -O"

# Shows git diff, excluding deleted files.
dico() {
    git diff $(git status -s --porcelain | \grep -v "^ D" | cut -b4-)
}

# Serves current working dir in 0.0.0.0:80
localserver() {
    docker run \
        --rm \
        --name localserver \
        -v $PWD:/usr/share/nginx/html:ro \
        -v $HOME/localserver.conf:/etc/nginx/conf.d/localserver.conf:ro \
        --privileged=true \
        -p 80:80 \
        nginx
}


# Runs a command and show all files modified by it, comparing date of last
# modification. So, there might be false positives, but still a pretty good
# idea.
supervise() {
    NOW="$(date "+%F %T.%N")"
    sleep 1
    $@
    find . -newermt "$NOW"
}

# Remove colors from input
nocolors() {
    FILTER="s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"
    while read -r line; do
        echo "$line" | sed -r "$FILTER"
    done
}

showpackages() {
    comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n 's/^Package: //p' | sort -u)
}

CURRENT_PWD=$PWD
while [[ "$PWD" != "/" ]]; do
    if [[ "${PWD##*/}" == *_local ]]; then
        if [[ -d "venv" ]]; then
            source venv/bin/activate
            cd $CURRENT_PWD
            unset CURRENT_PWD
            VENV_SET=1
            break
        fi
    fi

    cd ..
done

if [[ -z $VENV_SET ]]; then
    cd $CURRENT_PWD
    unset CURRENT_PWD

    if [[ -n $(which python3.6) ]]; then
        cd
        if [[ ! -d myvenv ]]; then
            python3.6 -m venv myvenv
            source myvenv/bin/activate
            pip install -U pip setuptools
        else
            source myvenv/bin/activate
        fi
        cd - > /dev/null
    else
        echo "Install Python 3.6 to enable default virtual environment"
    fi
else
    unset VENV_SET
fi
